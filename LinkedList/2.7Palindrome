//
//  main.cpp
//  2.7Palindrome
//
//  Created by Zhihong Ren on 2/29/16.
//  Copyright Â© 2016 Zhihong Ren. All rights reserved.
//

#include <iostream>
#include <vector>
using namespace std;
struct ListNode {
    int val;
    ListNode * next;
    ListNode (int x) : val(x),next(NULL) {}
};
bool isPalidrome(ListNode* head){
    ListNode * fast=head,*slow=head;
    vector<int> store;
    while (fast!=NULL&&fast->next!=NULL) {
        store.push_back(slow->val);
        fast=fast->next->next;
        slow=slow->next;
    }
    store.pop_back();
    if (fast==NULL) {
        slow=slow->next;
    }
    
    for (int i=store.size()-1; i>=0; i--) {
        if(store[i]!=slow->val) return false;
        slow=slow->next;
    }
    return true;
}
int main(int argc, const char * argv[]) {
    // insert code here...
    std::cout << "Hello, World!\n";
    return 0;
}
